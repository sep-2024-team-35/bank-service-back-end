// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/register": {
            "post": {
                "description": "Accepts merchant registration data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register a new merchant",
                "parameters": [
                    {
                        "description": "Merchant registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MerchantRegistrationDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payment/create/request": {
            "post": {
                "description": "Accepts payment request data from acquirer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Create a new payment request",
                "parameters": [
                    {
                        "description": "Payment request data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaymentRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "dto.MerchantRegistrationDto": {
            "type": "object",
            "properties": {
                "accountHolderName": {
                    "type": "string"
                },
                "merchantId": {
                    "type": "string"
                },
                "merchantPassword": {
                    "type": "string"
                }
            }
        },
        "dto.PaymentRequestDto": {
            "type": "object",
            "required": [
                "amount",
                "error_url",
                "failed_url",
                "merchant_id",
                "merchant_order_id",
                "merchant_password",
                "merchant_timestamp",
                "success_url"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "error_url": {
                    "type": "string"
                },
                "failed_url": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "string"
                },
                "merchant_order_id": {
                    "type": "string"
                },
                "merchant_password": {
                    "type": "string"
                },
                "merchant_timestamp": {
                    "type": "string"
                },
                "success_url": {
                    "type": "string"
                }
            }
        },
        "models.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "bankIdentifierCode": {
                    "type": "string"
                },
                "cardHolderName": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "merchantAccount": {
                    "type": "boolean"
                },
                "merchantId": {
                    "type": "string"
                },
                "merchantPassword": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "primaryAccountNumber": {
                    "type": "string"
                },
                "securityCode": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8443",
	BasePath:         "/api",
	Schemes:          []string{"https"},
	Title:            "Bank Service API",
	Description:      "Microservice simulating bank accounts and cards",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
